// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(KuvarContext))]
    partial class KuvarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("ID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Models.Kuvar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kuvar");
                });

            modelBuilder.Entity("Models.Recept", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojOcena")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int?>("KuvarID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ocena")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("KuvarID");

                    b.ToTable("Recept");
                });

            modelBuilder.Entity("Models.ReceptKorak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrKorak")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceptID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReceptID");

                    b.ToTable("RecKor");
                });

            modelBuilder.Entity("Models.ReceptOcena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int?>("ReceptID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("ReceptID");

                    b.ToTable("RecOc");
                });

            modelBuilder.Entity("Models.ReceptSastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Mera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceptID")
                        .HasColumnType("int");

                    b.Property<int?>("SastojakID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReceptID");

                    b.HasIndex("SastojakID");

                    b.ToTable("RecSas");
                });

            modelBuilder.Entity("Models.Sastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KuvarID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("KuvarID");

                    b.ToTable("Sastojak");
                });

            modelBuilder.Entity("Models.Recept", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Kuvar", "Kuvar")
                        .WithMany()
                        .HasForeignKey("KuvarID");

                    b.Navigation("Korisnik");

                    b.Navigation("Kuvar");
                });

            modelBuilder.Entity("Models.ReceptKorak", b =>
                {
                    b.HasOne("Models.Recept", "Recept")
                        .WithMany()
                        .HasForeignKey("ReceptID");

                    b.Navigation("Recept");
                });

            modelBuilder.Entity("Models.ReceptOcena", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Recept", "Recept")
                        .WithMany()
                        .HasForeignKey("ReceptID");

                    b.Navigation("Korisnik");

                    b.Navigation("Recept");
                });

            modelBuilder.Entity("Models.ReceptSastojak", b =>
                {
                    b.HasOne("Models.Recept", "Recept")
                        .WithMany()
                        .HasForeignKey("ReceptID");

                    b.HasOne("Models.Sastojak", "Sastojak")
                        .WithMany()
                        .HasForeignKey("SastojakID");

                    b.Navigation("Recept");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("Models.Sastojak", b =>
                {
                    b.HasOne("Models.Kuvar", "Kuvar")
                        .WithMany()
                        .HasForeignKey("KuvarID");

                    b.Navigation("Kuvar");
                });
#pragma warning restore 612, 618
        }
    }
}
